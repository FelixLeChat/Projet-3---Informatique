<UserControl x:Class="FrontEnd.UserControl.Message.MessageControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:viewModel="clr-namespace:FrontEnd.ViewModel"
             xmlns:classicTheme="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Classic"
             mc:Ignorable="d" 
             d:DesignHeight="150" d:DesignWidth="600">

    <UserControl.Resources>
        <BooleanToVisibilityConverter x:Key="Bool2Visibility" />

        <LinearGradientBrush x:Key="PanelBackground" EndPoint="0.5,1" StartPoint="0.5,0">
            <GradientStop Color="Black" Offset="1" />
            <GradientStop Color="#FF1B1B1B" />
        </LinearGradientBrush>

        <Style x:Key="BasicButton" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
            <Setter Property="BorderBrush" Value="{x:Static classicTheme:ClassicBorderDecorator.ClassicBorderBrush}" />
            <Setter Property="BorderThickness" Value="3" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Padding" Value="0,0,1,1" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <classicTheme:ClassicBorderDecorator x:Name="ContentContainer" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0" BorderStyle="None" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                        </classicTheme:ClassicBorderDecorator>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsKeyboardFocused" Value="True">
                                <Setter Property="BorderStyle" TargetName="ContentContainer" Value="RaisedFocused"/>
                            </Trigger>
                            <Trigger Property="IsDefaulted" Value="True">
                                <Setter Property="BorderStyle" TargetName="ContentContainer" Value="RaisedFocused"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="BorderStyle" TargetName="ContentContainer" Value="RaisedPressed"/>
                            </Trigger>
                            <Trigger Property="ToggleButton.IsChecked" Value="True">
                                <Setter Property="BorderStyle" TargetName="ContentContainer" Value="RaisedPressed"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="CloseButton" BasedOn="{StaticResource BasicButton}" TargetType="Button">
            <Setter Property="VerticalAlignment" Value="Top" />
            <Setter Property="FontFamily" Value="Verdana" />
            <Setter Property="FontSize" Value="9" />
            <Setter Property="FontWeight" Value="Bold" />
            <Setter Property="Foreground" Value="White" />
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="Margin" Value="15,7" />
            <Setter Property="Background" Value="{x:Null}" />
        </Style>

        <Style x:Key="PanelMessageText" TargetType="{x:Type TextBlock}">
            <Setter Property="HorizontalAlignment" Value="Left" />
            <Setter Property="Margin" Value="0,11,0,0" />
            <Setter Property="TextWrapping" Value="WrapWithOverflow" />
            <Setter Property="FontWeight" Value="Bold" />
            <Setter Property="FontSize" Value="20" />
            <Setter Property="VerticalAlignment" Value="Top" />
            <Setter Property="FontFamily" Value="/FrontEnd;component/Ressources/Font/#ProperPrincess" />
            <Setter Property="SnapsToDevicePixels" Value="True" />
        </Style>

        <Style x:Key="PanelSubMessageText" TargetType="{x:Type TextBlock}">
            <Setter Property="HorizontalAlignment" Value="Left" />
            <Setter Property="Margin" Value="0,5" />
            <Setter Property="TextWrapping" Value="Wrap" />
            <Setter Property="FontSize" Value="16" />
            <Setter Property="VerticalAlignment" Value="Top" />
            <Setter Property="FontFamily" Value="/FrontEnd;component/Ressources/Font/#ProperPrincess" />
            <Setter Property="SnapsToDevicePixels" Value="True" />
        </Style>
    </UserControl.Resources>

    <!--<UserControl.DataContext>
        <viewModel:MessagePresenter/>
    </UserControl.DataContext>-->

    <DockPanel Name="MessagePanel" Visibility="{Binding IsVisible, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource Bool2Visibility}}" RenderTransformOrigin="0.5,0.5" VerticalAlignment="Top">
        <DockPanel.RenderTransform>
            <TranslateTransform Y="-78"/>
        </DockPanel.RenderTransform>
        <DockPanel.Background>
            <SolidColorBrush Color="#FF821E46"></SolidColorBrush>
            <!--<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                <GradientStop Color="#FF821E46" Offset="0.5"/>
                <GradientStop Color="#00821E46" Offset="1"/>
                <GradientStop Color="#BF821E46" Offset="0.75"/>
            </LinearGradientBrush>-->
        </DockPanel.Background>

        <Button x:Name="btnClose"
            DockPanel.Dock="Right"
            Style="{StaticResource CloseButton}"
            ToolTip="Close"
            Command="{Binding CloseCommand}"
            Content="Fermer X" FontFamily="/FrontEnd;component/Ressources/Font/#Merienda" />

        <StackPanel VerticalAlignment="Top" Margin="15,0,0,5">
            <TextBlock x:Name="txtMessage"
                 Style="{StaticResource PanelMessageText}" 
                 Text="{Binding Title, UpdateSourceTrigger=PropertyChanged}"
                 Foreground="White" FontFamily="/FrontEnd;component/Ressources/Font/#Merienda" />

            <TextBlock x:Name="txtSubMessage"
                 Style="{StaticResource PanelSubMessageText}" 
                 Text="{Binding Message, UpdateSourceTrigger=PropertyChanged}"
                 Foreground="White" FontFamily="/FrontEnd;component/Ressources/Font/#Merienda" />
        </StackPanel>

        <DockPanel.Style>
            <Style TargetType="{x:Type DockPanel}">
                <Style.Triggers>
                    <Trigger Property="DockPanel.Visibility" Value="Visible">
                        <Trigger.EnterActions>
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetProperty="(DockPanel.RenderTransform).(TranslateTransform.Y)"
                                                     From="-78"
                                                     To="0"
                                                     Duration="0:0:0:1">
                                        <DoubleAnimation.EasingFunction>
                                        <CubicEase EasingMode="EaseInOut" />
                                        </DoubleAnimation.EasingFunction>
                                    </DoubleAnimation>
                                </Storyboard>
                            </BeginStoryboard>
                        </Trigger.EnterActions>
                    </Trigger>
                </Style.Triggers>
            </Style>
        </DockPanel.Style>
    </DockPanel>
</UserControl>



